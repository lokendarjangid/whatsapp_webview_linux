name: Build and Release WhatsApp Web AppImage

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-gi \
          python3-gi-cairo \
          gir1.2-gtk-3.0 \
          gir1.2-webkit2-4.1 \
          libfuse2 \
          wget \
          curl \
          desktop-file-utils \
          fuse
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyGObject
        
    - name: Verify dependencies
      run: |
        python3 -c "import gi; gi.require_version('Gtk', '3.0'); gi.require_version('WebKit2', '4.1'); from gi.repository import Gtk, WebKit2; print('‚úÖ Dependencies verified')"
        
    - name: Make build script executable
      run: chmod +x build-appimage-simple.sh
      
    - name: Build AppImage
      run: |
        # Extract appimagetool since FUSE might not work in GitHub Actions
        if [ ! -f "appimagetool-x86_64.AppImage" ]; then
          wget -q -O appimagetool-x86_64.AppImage "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool-x86_64.AppImage
        fi
        
        # Build AppDir manually since FUSE might not work
        APP_DIR="AppDir"
        rm -rf "$APP_DIR"
        mkdir -p "$APP_DIR"
        
        # Create the main executable
        cat > "$APP_DIR/whatsapp" << 'EOF'
        #!/usr/bin/env python3
        import gi
        gi.require_version('Gtk', '3.0')
        gi.require_version('WebKit2', '4.1')
        from gi.repository import Gtk, WebKit2

        class WhatsApp(Gtk.Window):
            def __init__(self):
                super().__init__(title="WhatsApp")
                self.set_default_size(1100, 720)

                view = WebKit2.WebView()
                view.load_uri("https://web.whatsapp.com/")

                scrolled = Gtk.ScrolledWindow()
                scrolled.add(view)

                self.add(scrolled)
                self.connect("destroy", Gtk.main_quit)

        win = WhatsApp()
        win.show_all()
        Gtk.main()
        EOF
        chmod +x "$APP_DIR/whatsapp"
        
        # Copy desktop file and icon
        cp whatsapp.desktop "$APP_DIR/"
        
        # Download icon if needed
        if [ ! -f "whatsapp.png" ]; then
          wget -q -O whatsapp.png "https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/256px-WhatsApp.svg.png" || echo "Failed to download icon"
        fi
        cp whatsapp.png "$APP_DIR/" || echo "No icon found, continuing without"
        
        # Create AppRun
        cat > "$APP_DIR/AppRun" << 'EOF'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        export PATH="${HERE}:${PATH}"
        exec "${HERE}/whatsapp" "$@"
        EOF
        chmod +x "$APP_DIR/AppRun"
        
        # Extract and use appimagetool
        ./appimagetool-x86_64.AppImage --appimage-extract
        ARCH=x86_64 ./squashfs-root/AppRun "$APP_DIR" "WhatsApp-Web-x86_64.AppImage"
        
    - name: Get version
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION="dev-$(date +'%Y%m%d')-$(echo $GITHUB_SHA | cut -c1-8)"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Rename AppImage with version
      run: |
        mv WhatsApp-Web-x86_64.AppImage WhatsApp-Web-${{ steps.get_version.outputs.VERSION }}-x86_64.AppImage
        ls -la WhatsApp-Web-*.AppImage
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: WhatsApp-Web-AppImage-${{ steps.get_version.outputs.VERSION }}
        path: WhatsApp-Web-*.AppImage
        retention-days: 30
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: WhatsApp-Web-*.AppImage
        draft: false
        prerelease: false
        generate_release_notes: true
        body: |
          ## WhatsApp Web AppImage Release
          
          ### üöÄ What's New
          - Portable WhatsApp Web client for Linux
          - No installation required - just download and run
          - Works on most Linux distributions
          
          ### üì¶ Download
          - **WhatsApp-Web-${{ steps.get_version.outputs.VERSION }}-x86_64.AppImage** - Main application
          
          ### üõ†Ô∏è How to Use
          1. Download the AppImage file
          2. Make it executable: `chmod +x WhatsApp-Web-*.AppImage`
          3. Run it: `./WhatsApp-Web-*.AppImage`
          
          ### üìã Requirements
          - Linux with GTK 3.0+ and WebKit2GTK
          - FUSE2 libraries (usually pre-installed)
          
          ### üêõ Issues
          If you encounter any issues, please report them on GitHub.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
